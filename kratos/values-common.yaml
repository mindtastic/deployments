postgres:
  postgresVersion: 14

  # pgBouncerReplicas sets the number of pgBouncer instances to deploy. The
  # default is 0. You need to set this to at least 1 to deploy pgBouncer or set
  # "pgBouncerConfig". Setting "pgBouncerConfig" will override the value of
  # pgBouncerReplicas. The "RELATED_IMAGE_PGBOUNCER" in the PGO deployment must be
  # set if you want to enable this without explicitly setting "pgBouncer".
  # pgBouncerReplicas: 1

  # monitoring enables the ability to monitor the Postgres cluster through a
  # metrics exporter than can be scraped by Prometheus. This defaults to the value
  # below.
  # monitoring: false

  # instanceName: instance1
  # instanceSize: 1Gi
  # instanceMemory: 2Gi
  # instanceCPU: 1000m
  # instanceReplicas: 1

  ##############################
  # Advanced Postgres Settings #
  ##############################

  # instances allows you to define one or more Postgres instance sets. By default,
  # PGO will only deploy a single instance. Each instance set has similar
  # characteristics to the other instances in the set, e.g. storage size, resource
  # etc. You can have multiple replicas within an instance set.
  #
  # This allows you to fully customize the topology of your Postgres instances.
  #
  # For example, to set up an instance set with HA (due to the default pod
  # topology spread constraints)
  #
  # instances:
  #   - name: pgha1
  #     replicas: 2
  #     dataVolumeClaimSpec:
  #       accessModes:
  #       - "ReadWriteOnce"
  #       resources:
  #         requests:
  #           storage: 1Gi
  # instances: {}

  # port sets the port that Postgres listens on. Defaults to 5432.
  # port: 5432

  # patroni lets you set the Patroni configuration for the Postgres cluster.
  # for example, to set up synchronous replication:
  # patroni:
  #   dynamicConfiguration:
  #     synchronous_mode: true
  #     postgresql:
  #       parameters:
  #         synchronous_commit: "on"
  # patroni: {}

  # users sets any custom Postgres users and databases that they have  access to
  # as well as any permossions assoicated with the user account.
  # users: {}

  # dataSource specifies a data source for bootstrapping a Postgres cluster.
  # dataSource: {}

  # customTLSSecret references a Secret that contains the relevant information for
  # bringing external TLS artifacts to a PostgreSQL cluster. This provides the
  # TLS for the cluster itself.
  # customTLSSecret: {}

  # customReplicationTLSSecret references a Secret that contains the relevant
  # information for bringing external TLS artifacts to a PostgreSQL cluster. This
  # provides the information for the replication user.
  # customReplicationTLSSecret: {}

  # databaseInitSQL referencs a ConfigMap that contains a SQL file that should be
  # run a cluster bootstrap.
  # databaseInitSQL:
  #   name: bootstrap-sql
  #   key: bootstrap.sql

  # standby sets whether or not to run this as a standby cluster. Both of the
  # values below are required to enable a standby cluster. Setting "enabled" to
  # "true" eunables the standby cluster while "repoName" points to a pgBackRest
  # archive to replay WAL files from.
  # standby:
  #   enabled: false
  #   repoName: repo1

  #################################
  # Backups / pgBackRest Settings #
  #################################

  # backupsSize sets the storage size of the backups to a volume in Kubernetes.
  # can be overridden by "pgBackRestConfig", if set. Defaults to the value below.
  # backupsSize: 1Gi

  # gcs allows for Google Cloud Storage (GCS) to be used for backups. This allows
  # for a quick setup with GCS; if you need a more advanced setup, use
  # "pgBackRestConfig".
  # gcs:
  #   # bucket is the name of the GCS bucket that the backups will be stored in.
  #   bucket: ""
  #   # key is a multi-line string that contains the GCS key, which is a JSON
  #   # structure.
  #   key: |
  #     {}

  ################################
  # Pooling / pgBouncer Settings #
  ################################

  # pgBouncerConfig sets all of the pgBouncer portion of the spec except for
  # image. To set image, you need to set the "pgBouncer" setting.
  # pgBouncerConfig: {}

  #######################
  # Monitoring Settings #
  #######################

  # monitoringConfig sets all of the monitoring portion of the spec except for the
  # image. To set the image, which also enables monitoring, you need to set the
  # "monitoring" setting.
  # monitoringConfig: {}

# Default values for kratos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- Number of replicas in deployment
replicaCount: 3
# -- Deployment update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 30%
    maxUnavailable: 0

image:
  # -- ORY KRATOS image
  repository: oryd/kratos
  # -- ORY KRATOS VERSION
  # Alternative format: image: oryd/kratos:v0.6.3-alpha.1
  tag: v0.9.0-alpha.3
  pullPolicy: IfNotPresent
  # imagePullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  admin:
    enabled: true
    type: ClusterIP
    port: 80
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- Provide custom labels. Use the same syntax as for annotations.
    labels: {}
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  public:
    enabled: true
    type: NodePort
    port: 80
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http-public
    # -- Provide custom labels. Use the same syntax as for annotations.
    labels: {}
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

secret:
  # -- switch to false to prevent creating the secret
  enabled: true
  # -- Provide custom name of existing secret, or custom name of secret to be created
  nameOverride: ""
  # nameOverride: "myCustomSecret"
  # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
  secretAnnotations:
    # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
    # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/resource-policy: "keep"
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashSumEnabled: true

ingress:
  admin:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: kratos.admin.local.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  public:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: traefik
      #kubernetes.io/tls-acme: "true"
    hosts:
      - host: auth.api.dev.mindtastic.lol
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

kratos:
  development: true
  # -- Enable the initialization job. Required to work with a DB
  autoMigrate: true

  # -- You can add multiple identity schemas here
  # Example taken from https://github.com/ory/kratos/blob/master/identity/stub/extension.schema.json.
  identitySchemas:
    "schema.user.json": |
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "User",
        "type": "object",
        "properties": {
          "traits": {
            "type": "object",
            "properties": {
              "accountKey": {
                "type": "string",
                "ory.sh/kratos": {
                  "credentials": {
                    "password": {
                      "identifier": true
                    }
                  }
                }
              }
            },
            "required": [
              "accountKey"
            ]
          }
        },
        "required": [
          "traits"
        ],
        "additionalProperties": false
      }
  #  "identity.email.schema.json": |
  #    {
  #      // ...
  #    }

  # -- You can customize the emails kratos is sending (also uncomment config.courier.template_override_path below)
  #  Note: If you are setting config.courier.template_override_path you need to supply overrides for all templates.
  #        It is currently not possible to overrides only selected methods.
  #
  #  emailTemplates:
  #    recovery:
  #      valid:
  #        subject: Recover access to your account
  #        body: |-
  #          Hi, please recover access to your account by clicking the following link:
  #
  #          <a href="{{ .RecoveryURL }}">{{ .RecoveryURL }}</a>
  #        plainBody: Hi, please recover access to your account by clicking the following link: {{ .RecoveryURL }}
  #      invalid:
  #        subject: Account access attempted
  #        body: |-
  #          Hi, you (or someone else) entered this email address when trying to recover access to an account.
  #
  #          However, this email address is not on our database of registered users and therefore the attempt has failed. If this was you, check if you signed up using a different address. If this was not you, please ignore this email.
  #        plainBody: Hi, you (or someone else) entered this email address when trying to recover access to an account.
  #    verification:
  #      valid:
  #        subject: Please verify your email address
  #        body: |-
  #          Hi, please verify your account by clicking the following link:
  #
  #          <a href="{{ .VerificationURL }}">{{ .VerificationURL }}</a>
  #        plainBody: Hi, please verify your account by clicking the following link: {{ .VerificationURL }}
  #      invalid:
  #        subject:
  #        body:
  #        plainBody:

  config:
    identity:
      schemas:
        - id: user
          url: file:///etc/config/schema.user.json
      default_schema_id: user
    courier:
      smtp:
        connection_uri: "smtps://mindtastic.lol" # Only set to fulfill requirements, not actually used.
      #template_override_path: /conf/courier-templates

    serve:
      public:
        port: 4433
        base_url: "https://auth.api.dev.mindtastic.lol"
      admin:
        port: 4434

    selfservice:
      default_browser_return_url: https://auth-example.api.dev.mindtastic.lol/

      methods:
        password:
          enabled: true
        profile:
          enabled: true

      flows:
        registration:
          lifespan: 15m
          ui_url: https://auth-example.api.dev.mindtastic.lol/registration
          after:
            password:
              hooks:
                - hook: session

        login:
          lifespan: 15m
          ui_url: https://auth-example.api.dev.mindtastic.lol/login
        error:
          ui_url: https://auth-example.api.dev.mindtastic.lol/error
        logout:
          after:
            default_browser_return_url: https://auth-example.api.dev.mindtastic.lol

    dsn: ""

    # Dummy cookies that have to be set for the session hook to work. These cookies are dummies and do not actually do anything. See https://www.ory.sh/docs/kratos/self-service/hooks
    secrets:
      cookie:
        - A7Ngqk6hdl7WwMglzHLKqahPyfEjDUDD
        - EFI9fkor8n5VGGAb5MCHpmKTJD6kx7QE

## -- Configuration options for the k8s deployment
deployment:
  # -- Configure the probes for when the deployment is considered ready and ongoing health check
  livenessProbe:
    httpGet:
      path: /health/alive
      port: http-public
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /health/ready
      port: http-public
    initialDelaySeconds: 30
    periodSeconds: 10
    failureThreshold: 5

  # -- Array of extra arguments to be passed down to the deployment. Kubernetes args format is expected
  # - --foo
  # - --sqa-opt-out
  extraArgs: []

  # -- Array of extra envs to be passed to the deployment. Kubernetes format is expected
  # - name: FOO
  #   value: BAR
  extraEnv: []
  # -- If you want to mount external volume
  # For example, mount a secret containing Certificate root CA to verify database
  # TLS connection.
  extraVolumes: []
  # - name: my-volume
  #   secret:
  #     secretName: my-secret
  extraVolumeMounts: []
  # - name: my-volume
  #   mountPath: /etc/secrets/my-secret
  #   readOnly: true

  # extraVolumes:
  #   - name: postgresql-tls
  #     secret:
  #       secretName: postgresql-root-ca
  # extraVolumeMounts:
  #   - name: postgresql-tls
  #     mountPath: "/etc/postgresql-tls"
  #     readOnly: true

  # -- If you want to add extra init containers. These are processed before the migration init container.
  extraInitContainers: {}
  # extraInitContainers: |
  #  - name: ...
  #    image: ...

  # -- If you want to add extra sidecar containers.
  extraContainers: {}
  # extraContainers: |
  #  - name: ...
  #    image: ...

  # -- Configuration for tracing providers. Only datadog is currently supported through this block.
  # If you need to use a different tracing provider, please manually set the configuration values
  # via "kratos.config" or via "deployment.extraEnv".
  tracing:
    datadog:
      enabled: false

      # Sets the datadog DD_ENV environment variable. This value indicates the environment where kratos is running.
      # Default value: "none".
      # env: production

      # Sets the datadog DD_VERSION environment variable. This value indicates the version that kratos is running.
      # Default value: .Values.image.tag (i.e. the tag used for the docker image).
      # version: X.Y.Z

      # Sets the datadog DD_SERVICE environment variable. This value indicates the name of the service running.
      # Default value: "ory/kratos".
      # service: ory/kratos

      # Sets the datadog DD_AGENT_HOST environment variable. This value indicates the host address of the datadog agent.
      # If set to true, this configuration will automatically set DD_AGENT_HOST to the field "status.hostIP" of the pod.
      # Default value: false.
      # useHostIP: true

  resources:
  #  We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # -- Node labels for pod assignment.
  nodeSelector: {}
  # If you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'nodeSelector:'.
  #   foo: bar

  # -- Configure node tolerations.
  tolerations: []

  labels: {}
  #      If you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  annotations:
    linkerd.io/inject: enabled
  #      If you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"

  # -- The secret specified here will be used to load environment variables with envFrom.
  # This allows arbitrary environment variables to be provided to the application which is useful for
  # sensitive values which should not be in a configMap.
  # This secret is not created by the helm chart and must already exist in the namespace.
  # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables
  # environmentSecretsName:

  # -- Specify the serviceAccountName value.
  # In some situations it is needed to provide specific permissions to Kratos deployments.
  # Like for example installing Kratos on a cluster with a PosSecurityPolicy and Istio.
  # Uncomment if it is needed to provide a ServiceAccount for the Kratos deployment.
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  # https://github.com/kubernetes/kubernetes/issues/57601
  automountServiceAccountToken: true

## -- Configuration options for the k8s statefulSet
statefulSet:
  resources: {}
  #  We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #  memory: 128Mi

  extraEnv: []
  # -- If you want to mount external volume
  # For example, mount a secret containing Certificate root CA to verify database
  # TLS connection.
  extraVolumes: []
  # - name: my-volume
  #   secret:
  #     secretName: my-secret
  extraVolumeMounts: []
  # - name: my-volume
  #   mountPath: /etc/secrets/my-secret
  #   readOnly: true

  # -- If you want to add extra init containers. These are processed before the migration init container.
  extraInitContainers: {}
  # extraInitContainers: |
  #  - name: ...
  #    image: ...

  # -- If you want to add extra sidecar containers.
  extraContainers: {}
  # extraContainers: |
  #  - name: ...
  #    image: ...

  annotations: {}
  #      If you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteAppHTTPProbers: "true"

  labels: {}
  #      If you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 100
  allowPrivilegeEscalation: false
  privileged: false

# -- Horizontal pod autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Values for initialization job
job:
  # -- If you do want to specify annotations, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"

  # -- If you want to add extra sidecar containers.
  extraContainers: {}
  # extraContainers: |
  #  - name: ...
  #    image: ...

  # -- If you want to add lifecycle hooks.
  lifecycle: {}
  # lifecycle: |
  #   preStop:
  #     exec:
  #       command: [...]

  # -- Set automounting of the SA token
  automountServiceAccountToken: true

  # -- Set sharing process namespace
  shareProcessNamespace: false

  # -- Specify the serviceAccountName value.
  # In some situations it is needed to provides specific permissions to Hydra deployments
  # Like for example installing Hydra on a cluster with a PosSecurityPolicy and Istio.
  # Uncoment if it is needed to provide a ServiceAccount for the Hydra deployment.
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations:
      helm.sh/hook-weight: "0"
      helm.sh/hook: "pre-install, pre-upgrade"
      helm.sh/hook-delete-policy: "before-hook-creation"
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name: ""

  spec:
    # -- Set job back off limit
    backoffLimit: 10

statefulset:
  log:
    format: json
    level: trace

# -- Configure node affinity
affinity: {}
# -- Node labels for pod assignment.
nodeSelector: {}
# -- If you do want to specify node labels, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
#   foo: bar
# Configure node tolerations.
tolerations: []

watcher:
  enabled: false
  image: oryd/k8s-toolbox:0.0.2
  mountFile: ""
  # mountFile: /etc/secrets/my-secret/foo

# -- PodDistributionBudget configuration
pdb:
  enabled: false
  spec:
    minAvailable: 1

# -- Parameters for the Prometheus ServiceMonitor objects.
# Reference: https://docs.openshift.com/container-platform/4.6/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
serviceMonitor:
  # -- switch to false to prevent creating the ServiceMonitor
  enabled: false
  # -- HTTP scheme to use for scraping.
  scheme: http
  # -- Interval at which metrics should be scraped
  scrapeInterval: 60s
  # -- Timeout after which the scrape is ended
  scrapeTimeout: 30s
  # -- Provide additionnal labels to the ServiceMonitor ressource metadata
  labels: {}
  # -- TLS configuration to use when scraping the endpoint
  tlsConfig: {}

configmap:
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashSumEnabled: true
