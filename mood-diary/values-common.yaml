replicaCount: 3

postgres:
  postgresVersion: 14
  patroni:
    dynamicConfiguration:
      postgresql:
        pg_hba:
          - "host all all 0.0.0.0/0 trust" # this line enabled logical replication with programmatic access
          - "host all postgres 127.0.0.1/32 md5"

image:
  repository: ghcr.io/mindtastic/mood-diary
  pullPolicy: IfNotPresent
  tag: "8f6cab12b769e6b59455c092ca8e3d840cc0585c"

accessRule:
  matchPath: "https://diary.api.dev.mindtastic.lol/diary"
  matchMethods: ["GET","PUT","DELETE","POST"]
  kratosCheckSessionURL: http://kratos-public.kratos.svc.cluster.local/sessions/whoami
  kodaHydratorURL: http://koda.koda.svc.cluster.local:4133/

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  linkerd.io/inject: enabled

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5001

ingress:
  enabled: true
  className: "traefik"
  annotations: {}
  hosts:
    - host: "diary.api.dev.mindtastic.lol"
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
